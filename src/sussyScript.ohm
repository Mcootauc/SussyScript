SussyScript {
  Program   = Statement+
  Statement = let id "=" Exp                       -- vardec
            | function id "(" Params ")" Block     -- fundec
            | id "=" Exp                           -- assign
            | print Exp                            -- print
            | return Exp                           -- return
            | while Exp Block                      -- while
            | space

  Block     = "{" Statement* "}"

  Exp       = ("-" | "!") Exp7                        -- unary
            | Exp1 "?" Exp1 ":" Exp                   -- ternary
            | Exp1
  Exp1      = Exp1 "||" Exp2                          -- binary
            | Exp2
  Exp2      = Exp2 "&&" Exp3                          -- binary
            | Exp3
  Exp3      = Exp4 ("<="|"<"|"=="|"!="|">="|">") Exp4 -- binary
            | Exp4
  Exp4      = Exp4 ("+" | "-") Exp5                   -- binary
            | Exp5
  Exp5      = Exp5 ("*" | "/" | "%") Exp6             -- binary
            | Exp6
  Exp6      = Exp7 "**" Exp6                          -- binary
            | Exp7
  Exp7      = num
            | true
            | false
            | Call
            | id                                      -- id
            | "(" Exp ")"                             -- parens

  Call      = id "(" Args ")"
  Params    = ListOf<id, ",">
  Args      = ListOf<Exp, ",">

  return    = "return" ~idchar

  let       = "varus" ~idchar
  function  = "function" ~idchar
  while     = "while" ~idchar
  true      = "true" ~idchar
  false     = "false" ~idchar

  print     = "print" ~idchar
  keyword   = let | print | function | while | true | false
  num       = digit+ ("." digit+)? (("E" | "e") ("+" | "-")? digit+)?
  id        = ~keyword letter idchar*
  idchar    = letter | digit | "_"
  space    += "cR" (~"\n" any)*                       -- comment
}