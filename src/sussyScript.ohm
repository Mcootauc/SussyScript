SussyScript {
  Program   = Statement+
  Statement = (let | const) id "=" Exp             -- vardec
            | function id "(" Params ")" Block     -- fundec
            | id "=" Exp                           -- assign
            | print Exp                            -- print
            | return Exp                           -- return
            | return                               -- shortreturn
            | break                                -- break
            | space
            | IfStmt
            | LoopStmt

  Block     = "{" Statement* "}"

  IfStmt    = if Exp Block else Block                       -- long
            | if Exp Block else IfStmt                      -- elsif
            | if Exp Block                                  -- short

  LoopStmt  = while Exp Block                               -- while
            | repeat Exp Block                              -- repeat
            | for id in Exp ("past" | "till") Exp Block       -- range

  Exp       = ("-" | "!") Exp7                        -- unary
            | Exp1 "?" Exp1 ":" Exp                   -- ternary
            | Exp1
  Exp1      = Exp1 "||" Exp2                          -- binary
            | Exp2
  Exp2      = Exp2 "&&" Exp3                          -- binary
            | Exp3
  Exp3      = Exp4 ("<="|"<"|"=="|"!="|">="|">") Exp4 -- binary
            | Exp4
  Exp4      = Exp4 ("+" | "-") Exp5                   -- binary
            | Exp5
  Exp5      = Exp5 ("*" | "/" | "%") Exp6             -- binary
            | Exp6
  Exp6      = Exp7 "**" Exp6                          -- binary
            | Exp7
  Exp7      = num
            | true
            | false
            | Call
            | id                                      -- id
            | "(" Exp ")"                             -- parens
            | strlit

  strlit    = "\"" (~"\"" any)* "\""

  Call      = id "(" Args ")"
  Params    = ListOf<id, ",">
  Args      = ListOf<Exp, ",">

  Return      = return Exp 		                        -- exp 

  let         = "letus" ~alnum
  const       = "constus" ~alnum
  print       = "report" ~alnum
  function    = "task" ~alnum
  if          = "sus" ~alnum
  else        = "mega" ~alnum
  while       = "during" ~alnum
  for         = "scan" ~alnum
  in          = "in" ~alnum
  repeat      = "repeat" ~alnum
  return      = "vote" ~alnum
  true        = "crewmate" ~alnum
  false       = "imposter" ~alnum
  break       = "eject" ~alnum


  keyword     = let | const| print | function | else | if | while | repeat
            | for | in | break | return | true | false      
  num       = digit+ ("." digit+)? (("E" | "e") ("+" | "-")? digit+)?
  id        = ~keyword letter idchar*
  idchar    = letter | digit | "_"
  space    += "cR" (~"\n" any)*                       -- comment
}